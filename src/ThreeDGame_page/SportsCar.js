/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
CAR Model by Ignition Labs [CC-BY], via Poly Pizza
*/

import React, { useRef } from "react";
import { useGLTF, meshBounds } from "@react-three/drei";
import useControls from "ThreeDGame_page/useControls";
import { useFrame } from "@react-three/fiber";
import { useSpring, animated } from "@react-spring/three";
import state from "ThreeDGame_page/appState";
import { useSnapshot } from "valtio";

export default function Model({ ...props }) {
  const car = useRef();
  const controls = useControls();
  const { nodes, materials } = useGLTF("/game/SportsCar.glb");
  const [springProps, springApi] = useSpring(() => ({
    rotation: [0, Math.PI, 0],
  }));
  const snap = useSnapshot(state);

  useFrame(() => {
    const { left, right } = controls.current;
    const MAX_ANGLE = Math.PI / 7;
    const BASE_ANGLE = Math.PI;
    const MAX_DISTANCE = 28;
    const SPEED = 1;

    let sign;

    if (left) {
      sign = 1;
    } else if (right) {
      sign = -1;
    } else {
      sign = 0;
    }

    if (!snap.gameStart) return null;

    springApi({
      rotation: [0, BASE_ANGLE + sign * MAX_ANGLE, 0],
    });

    car.current.position.x += -SPEED * sign;
    car.current.position.x = Math.max(car.current.position.x, -MAX_DISTANCE);
    car.current.position.x = Math.min(car.current.position.x, MAX_DISTANCE);
    state.sportsCarPosX = car.current.position.x;
  });

  return (
    <animated.group
      raycast={meshBounds}
      castShadow
      ref={car}
      {...props}
      position={[0, -2, 3]}
      scale={[0.06, 0.06, 0.06]}
      rotation={springProps.rotation}
      dispose={null}
    >
      <mesh
        geometry={nodes.Lamborghini_Aventador_Body.geometry}
        material={materials._Lamborghini_AventadorLamborghini_Aventador_BodySG}
      />
      <mesh
        geometry={nodes.Lamborghini_Aventador_Glass.geometry}
        material={materials._Lamborghini_AventadorLamborghini_Aventador_GlassSG}
      />
      <mesh
        geometry={nodes.Lamborghini_Aventador_Wheel_FL.geometry}
        material={materials._Lamborghini_AventadorLamborghini_Aventador_BodySG}
      />
      <mesh
        geometry={nodes.Lamborghini_Aventador_Wheel_FR.geometry}
        material={materials._Lamborghini_AventadorLamborghini_Aventador_BodySG}
      />
      <mesh
        geometry={nodes.Lamborghini_Aventador_Wheel_RL.geometry}
        material={materials._Lamborghini_AventadorLamborghini_Aventador_BodySG}
      />
      <mesh
        geometry={nodes.Lamborghini_Aventador_Wheel_RR.geometry}
        material={materials._Lamborghini_AventadorLamborghini_Aventador_BodySG}
      />
    </animated.group>
  );
}

useGLTF.preload("/game/SportsCar.glb");
